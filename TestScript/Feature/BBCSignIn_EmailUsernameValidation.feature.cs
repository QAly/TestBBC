// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BDDProject.TestScript.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("BBCLogin_EmailUsernameValidation")]
    public partial class BBCLogin_EmailUsernameValidationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "BBCSignIn_EmailUsernameValidation.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "BBCLogin_EmailUsernameValidation", "\tOpen BBC Page\r\n\tcheck signing in using invalid Email or username credential\r\n\tCh" +
                    "eck the right information is displayed to help user to sign in correctly", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("As a user I am on \"BBCURL\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with Invalid Email")]
        [NUnit.Framework.CategoryAttribute("Browser_Chrome")]
        [NUnit.Framework.TestCaseAttribute("kelebalydie@gmailcom", null)]
        [NUnit.Framework.TestCaseAttribute("keleba@com", null)]
        [NUnit.Framework.TestCaseAttribute("lydie@", null)]
        [NUnit.Framework.TestCaseAttribute("lydiekelebalydie@gmail.com", null)]
        public virtual void SiginingInWithInvalidEmail(string email, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser_Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with Invalid Email", null, @__tags);
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 12
 testRunner.Given(string.Format("As a user I enter invalid {0} in the email section", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.And("I enter valid Password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("I should be able to see a warning message displayed in the email section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with a Valid Email not linked to a BBC Account")]
        [NUnit.Framework.CategoryAttribute("Browser_Chrome")]
        [NUnit.Framework.TestCaseAttribute("kelebalydie@gmail.co.uk", null)]
        [NUnit.Framework.TestCaseAttribute("KELEBALYDIE@GMAIL.COM", null)]
        [NUnit.Framework.TestCaseAttribute("senylydie@hotmail.co.uk", null)]
        public virtual void SiginingInWithAValidEmailNotLinkedToABBCAccount(string email, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser_Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with a Valid Email not linked to a BBC Account", null, @__tags);
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 26
 testRunner.Given(string.Format("I input {0} in the dedicated email section", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.And("I enter valid Password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("I should be able to see a warning message displayed in the email section for vali" +
                    "d Email Not Linked to a BBC account", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with Invalid Username including Acceptable characters")]
        [NUnit.Framework.CategoryAttribute("Browser_Chrome")]
        [NUnit.Framework.TestCaseAttribute("lydie233", null)]
        [NUnit.Framework.TestCaseAttribute("lydie233%", null)]
        [NUnit.Framework.TestCaseAttribute("lydie233$", null)]
        [NUnit.Framework.TestCaseAttribute("lydie233?", null)]
        [NUnit.Framework.TestCaseAttribute("lydie233#", null)]
        [NUnit.Framework.TestCaseAttribute("lydie~", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123^", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123=", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123_", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123+", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123}", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123{", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123\\", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123/", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123\'", null)]
        [NUnit.Framework.TestCaseAttribute("lydie123-", null)]
        [NUnit.Framework.TestCaseAttribute("kelebalydiegmailcom", null)]
        public virtual void SiginingInWithInvalidUsernameIncludingAcceptableCharacters(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser_Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with Invalid Username including Acceptable characters", null, @__tags);
#line 39
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 40
 testRunner.Given(string.Format("I input {0} in the username box", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.And("I enter valid Password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.Then("I should be able to see a warning message displayed in the email section for acce" +
                    "ptable characters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with Invalid Username Including Characters Not Accepted")]
        [NUnit.Framework.CategoryAttribute("Browser_Chrome")]
        [NUnit.Framework.TestCaseAttribute("lydie.", null)]
        [NUnit.Framework.TestCaseAttribute("lydie*", null)]
        [NUnit.Framework.TestCaseAttribute("lydie!", null)]
        [NUnit.Framework.TestCaseAttribute("lydie,", null)]
        [NUnit.Framework.TestCaseAttribute("lydie:", null)]
        [NUnit.Framework.TestCaseAttribute("lydie!", null)]
        [NUnit.Framework.TestCaseAttribute("lydie&", null)]
        [NUnit.Framework.TestCaseAttribute("lydie>", null)]
        [NUnit.Framework.TestCaseAttribute("lydie<", null)]
        public virtual void SiginingInWithInvalidUsernameIncludingCharactersNotAccepted(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser_Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with Invalid Username Including Characters Not Accepted", null, @__tags);
#line 66
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 67
 testRunner.Given(string.Format("I enter invalid {0} including unacceptable charaters", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.And("I enter valid Password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("I should be able to see a warning message displayed in the email section for Unac" +
                    "ceptable characters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with Invalid Username warning message to still show")]
        [NUnit.Framework.CategoryAttribute("Browser_Chrome")]
        [NUnit.Framework.TestCaseAttribute("lydie>", null)]
        [NUnit.Framework.TestCaseAttribute("lydie<", null)]
        public virtual void SiginingInWithInvalidUsernameWarningMessageToStillShow(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser_Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with Invalid Username warning message to still show", null, @__tags);
#line 85
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 86
 testRunner.Given(string.Format("I enter invalid {0} characters", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then("I should be able to see a warning message displayed  for Unacceptable characters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
 testRunner.And("I enter valid Password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.Then("warning message should still show", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with Username in UpperCase")]
        [NUnit.Framework.CategoryAttribute("Browser_Chrome")]
        [NUnit.Framework.TestCaseAttribute("LYDIE", null)]
        [NUnit.Framework.TestCaseAttribute("Lydie", null)]
        [NUnit.Framework.TestCaseAttribute("lYdie", null)]
        [NUnit.Framework.TestCaseAttribute("LydiE", null)]
        public virtual void SiginingInWithUsernameInUpperCase(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser_Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with Username in UpperCase", null, @__tags);
#line 100
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 101
 testRunner.Given(string.Format("I enter a valid {0} in UpperCase", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 102
 testRunner.And("I enter valid Password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.Then("I should be able to see a warning message displayed in the email section for case" +
                    " sensitive not accepted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with blank EmailUsername or Password")]
        [NUnit.Framework.CategoryAttribute("Browser_Chrome")]
        public virtual void SiginingInWithBlankEmailUsernameOrPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with blank EmailUsername or Password", null, new string[] {
                        "Browser_Chrome"});
#line 113
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 114
 testRunner.Given("I enter no Username in the username section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 115
 testRunner.And("I enter no password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
 testRunner.Then("I should be able to see a warning message displayed in the username section as we" +
                    "ll as in password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with blank EmailUsername")]
        [NUnit.Framework.CategoryAttribute("Chrome_Browser")]
        public virtual void SiginingInWithBlankEmailUsername()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with blank EmailUsername", null, new string[] {
                        "Chrome_Browser"});
#line 121
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 122
    testRunner.Given("I enter no Username in the username section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
 testRunner.And("I enter valid Password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
 testRunner.Then("I should be able to see a warning message displayed in the username section as we" +
                    "ll as in password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with blank Password")]
        [NUnit.Framework.CategoryAttribute("Chrome_Browser")]
        public virtual void SiginingInWithBlankPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with blank Password", null, new string[] {
                        "Chrome_Browser"});
#line 129
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 130
    testRunner.Given("I enter valid Username in the email section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
 testRunner.And("I enter no password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
 testRunner.Then("I should be able to see a warning message displayed in the username section as we" +
                    "ll as in password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Sigining In with long username")]
        [NUnit.Framework.CategoryAttribute("Browser_Chrome")]
        [NUnit.Framework.TestCaseAttribute("lydielydielydielydielydielydielydielydielydielydielydielydie", null)]
        public virtual void SiginingInWithLongUsername(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser_Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sigining In with long username", null, @__tags);
#line 136
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 137
 testRunner.Given(string.Format("I enter long {0} in the email", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 138
 testRunner.And("I enter valid Password in the password section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.When("I click on Sigin in button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.Then("I should be able to see a warning message displayed in the email section for long" +
                    " username", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
